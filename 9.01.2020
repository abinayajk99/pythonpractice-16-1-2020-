import math
>>> def area(r):
...     '''Are of a circle'''
...     return math.pi * (r**2)
... 
>>> radii=[2,5,7.1,0.3,10]
>>> #method1:direct method
... 
areas=[]
>>> for r in radii:
...     a=area(r)
...     areas.append(a)
>>>areas
[12,78.......]

>>>#method 2:using map
...
>>>map(area,radii]
<map object at 0x01DA1EB0>
>>>list(map(area,radii))
=================================================
temp=[("A",29),("b",36),("C",28)]
>>> ctof=lambda data:(data[0],(9/5)*data[1]+32)
>>> list(map(ctof,temp))
[('A', 61), ('b', 68), ('C', 60)]
>>> 
==========================================
		//filter
avg=2.1
>>> data=[1.3,2.7,0.8,4.1,4.3,-0.1]
>>> filter(lambda x:x>avg,data)
[2.7, 4.1, 4.3]
>>> filter(lambda x:x<avg,data)
[1.3, 0.8, -0.1]
>>> #remove missing values
... 
>>> c=["","A","V","C","",""]
>>> list(filter(None,c))
['A', 'V', 'C']
>>> 
===============================================
		//Reduce
 from functools import reduce
>>> #Mulitplier all numbers in a list
... 
>>> d=[2,3,5,7,11,13,17,19,23,29]
>>> m=lambda x,y:x*y
>>> reduce(m,d)
6469693230
>>>
=================================
class employee:
	def __init__(self,first,last,pay) 
		self.first=first
		self.last=last	
		self.pay=pay
		self.email=first+'.'+last+'@compay.com'
	def fullname(Self):
		return '{} {}'.format(Self.first,self.last)
	def apply_raise(self):
		self.pay=int(self.pay*1.04)

emp1=employee("abi","janu",5000)
emp2=employee("gane","verr",6000)
##print(employee.fullname(emp1))
##emp1.fullname()
print(emp1)
print(emp1.apply_raise
	


