					#duck typing		

class pycharm:
    def execute(self):
        print("compiling ")
        print("running")

class laptop:
    def code(self,ide):
        ide.execute()
ide=pycharm()
lap=laptop()
lap.code(ide)
=====================================================================================================================================
				#operator overloading.
class student:
    def __init__(self,m1,m2):
        self.m1=m1
        self.m2=m2
    def __add__(self,other):
        m1=self.m1+other.m1
        m2=self.m2+other.m2
        s3=student(m1,m2)
        return s3
s1=student(90,70)
s2=student(45,85)
s3=s1+s2
print(s3.m1,s3.m2)
========================================================================================================================================
				#working with greater of function in operator overloading.

class student:
    def __init__(self,m1,m2):
        self.m1=m1
        self.m2=m2
    '''def __add__(self,other):
        m1=self.m1+other.m1
        m2=self.m2+other.m2
        s3=student(m1,m2)
        return s3'''
    def __gt__(self,other):
        r1=self.m1+self.m2
        r2=other.m1+other.m2
        if r1>r2:
            return True
        else:
            return False
s1=student(90,70)
s2=student(45,85)
#s3=s1+s2
#print(s3.m1,s3.m2)
if s1>s2:
    print("s1 is greater")
else:
    print("s2 is greater")
======================================================================================================================================

		    #Printing the value of the objects
class student:
    def __init__(self,m1,m2):
        self.m1=m1
        self.m2=m2
    '''def __add__(self,other):
        m1=self.m1+other.m1
        m2=self.m2+other.m2
        s3=student(m1,m2)
        return s3'''
    def __gt__(self,other):
        r1=self.m1+self.m2
        r2=other.m1+other.m2
        if r1>r2:
            return True
        else:
            return False
s1=student(90,70)
s2=student(45,85)
#s3=s1+s2
#print(s3.m1,s3.m2)
if s1>s2:
    print("s1 is greater")
else:
    print("s2 is greater")
==================================================================================================================================

    
